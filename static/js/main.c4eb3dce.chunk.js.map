{"version":3,"sources":["WeatherWatch/ApiClient/ApiClient.js","WeatherWatch/Date/Date.js","WeatherWatch/Cards/Cards.js","WeatherWatch/WeatherWatch.js","App.js","reportWebVitals.js","index.js"],"names":["ApiClient","status","response","Promise","resolve","reject","Error","statusText","fetchWeatherApi","location","getRequest","alert","url","axios","get","then","catch","error","console","days","months","WeeklyCard","props","timestamp","Date","parseInt","date","dateDay","getDay","dateMonth","getMonth","toString","match","fixDate","getDate","icon","description","minTemp","maxTemp","humidity","windSpeed","sunrise","toLocaleTimeString","sunset","Card","className","style","width","minHeight","textAlign","marginTop","border","borderRadius","Header","Body","backgroundColor","textTransform","src","alt","WeatherWatch","createCards","state","dailyWeather","slice","map","current","i","Col","CardGroup","Cards","dt","weather","temp","min","max","wind_speed","changeLocation","setState","getWeather","loadState","fetching","apiClient","updateWeather","data","finally","currentWeather","daily","componentDidMount","Navbar","bg","variant","Brand","Toggle","aria-controls","Collapse","id","Nav","to","onClick","Container","path","this","Row","disable_box_shadow","fontWeight","fontSize","exact","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4eb3dce.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport class ApiClient {\r\n\tstatus = (response) => {\r\n\t\tif (response.status >= 200 && response.status < 300) {\r\n\t\t\treturn Promise.resolve(response);\r\n\t\t} else {\r\n\t\t\treturn Promise.reject(new Error(response.statusText));\r\n\t\t}\r\n\t};\r\n\r\n\tfetchWeatherApi = (location) => {\r\n\t\tif (location === \"London\") {\r\n\t\t\treturn this.getRequest(\r\n\t\t\t\t`https://api.openweathermap.org/data/2.5/onecall?lat=51.5074&lon=0.1278&units=metric&exclude=hourly,minutely&appid=ed18e45826554b0f52007a1992b575df`\r\n\t\t\t);\r\n\t\t} else if (location === \"Sheffield\") {\r\n\t\t\treturn this.getRequest(\r\n\t\t\t\t`https://api.openweathermap.org/data/2.5/onecall?lat=53.3811&lon=1.4701&units=metric&exclude=hourly,minutely&appid=ed18e45826554b0f52007a1992b575df`\r\n\t\t\t);\r\n\t\t} else if (location === \"Luton\") {\r\n\t\t\treturn this.getRequest(\r\n\t\t\t\t`https://api.openweathermap.org/data/2.5/onecall?lat=51.8787&lon=0.4200&units=metric&exclude=hourly,minutely&appid=ed18e45826554b0f52007a1992b575df`\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\talert(`That location is not supported.`);\r\n\t\t}\r\n\t};\r\n\r\n\tgetRequest = (url) => {\r\n\t\treturn axios\r\n\t\t\t.get(url)\r\n\t\t\t.then(this.status)\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t\talert(error);\r\n\t\t\t});\r\n\t};\r\n}\r\n","export const days = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\r\n\r\nexport const months = [\r\n\t\"Jan\",\r\n\t\"Feb\",\r\n\t\"March\",\r\n\t\"April\",\r\n\t\"May\",\r\n\t\"June\",\r\n\t\"July\",\r\n\t\"Aug\",\r\n\t\"Sept\",\r\n\t\"Oct\",\r\n\t\"Nov\",\r\n\t\"Dec\",\r\n];\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { days, months } from \"../Date/Date\";\r\n\r\nconst WeeklyCard = (props) => {\r\n\tconst timestamp = new Date(parseInt(props.date) * 1000);\r\n\tconst dateDay = days[timestamp.getDay(timestamp)];\r\n\tconst dateMonth = months[timestamp.getMonth(timestamp)];\r\n\tconst date = fixDate(timestamp.getDate(timestamp));\r\n\tconst icon = `http://openweathermap.org/img/wn/${props.icon}@2x.png`;\r\n\tconst description = props.description;\r\n\tconst minTemp = props.minTemp;\r\n\tconst maxTemp = props.maxTemp;\r\n\tconst humidity = props.humidity;\r\n\tconst windSpeed = props.windSpeed;\r\n\tconst sunrise = new Date(\r\n\t\tparseInt(props.sunrise) * 1000\r\n\t).toLocaleTimeString();\r\n\tconst sunset = new Date(parseInt(props.sunset) * 1000).toLocaleTimeString();\r\n\r\n\tfunction fixDate(date) {\r\n\t\tif (date.toString().match(/.*[1]$/g)) {\r\n\t\t\treturn `${date}st`;\r\n\t\t} else if (date.toString().match(/.*[2]$/g)) {\r\n\t\t\treturn `${date}nd`;\r\n\t\t} else if (date.toString().match(/.*[3]$/g)) {\r\n\t\t\treturn `${date}rd`;\r\n\t\t} else {\r\n\t\t\treturn `${date}th`;\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card\r\n\t\t\t\tclassName=\"pt-5 pt-md-0\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: \"250px\",\r\n\t\t\t\t\tminHeight: \"500px\",\r\n\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\tmarginTop: \"100px\",\r\n\t\t\t\t\tborder: \"5px solid white\",\r\n\t\t\t\t\tborderRadius: \"10px\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Card.Header className=\"bg-primary\">\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t{dateDay} {date} {dateMonth}\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<Card.Body\r\n\t\t\t\t\tclassName=\"justify-content-center\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundColor: \"lightblue\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<p\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\ttextTransform: \"capitalize\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img src={icon} alt={description} />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t{description}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<b>Min Temp: </b>\r\n\t\t\t\t\t\t{minTemp}°C\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<b>Max Temp: </b>\r\n\t\t\t\t\t\t{maxTemp}°C\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<b>Humidity: </b>\r\n\t\t\t\t\t\t{humidity}%\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<b>Wind Speed: </b>\r\n\t\t\t\t\t\t{windSpeed}mph\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<b>Sunrise: </b>\r\n\t\t\t\t\t\t{sunrise}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<b>Sunset: </b>\r\n\t\t\t\t\t\t{sunset}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default WeeklyCard;\r\n","import React from \"react\";\r\nimport { ApiClient } from \"./ApiClient/ApiClient\";\r\nimport Cards from \"./Cards/Cards\";\r\n\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport CardGroup from \"react-bootstrap/CardGroup\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport ReactCardCarousel from \"react-card-carousel\";\r\n\r\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nclass WeatherWatch extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tlocation: \"Luton\",\r\n\t\t\tcurrentWeather: [],\r\n\t\t\tdailyWeather: [],\r\n\t\t\tloadState: \"\",\r\n\t\t};\r\n\t\tthis.apiClient = new ApiClient();\r\n\t}\r\n\r\n\tcreateCards = () => {\r\n\t\treturn this.state.dailyWeather.slice(0, 7).map((current, i) => (\r\n\t\t\t<Col key={i}>\r\n\t\t\t\t<CardGroup>\r\n\t\t\t\t\t<Cards\r\n\t\t\t\t\t\tdate={current.dt}\r\n\t\t\t\t\t\ticon={current.weather[0].icon}\r\n\t\t\t\t\t\tdescription={current.weather[0].description}\r\n\t\t\t\t\t\tminTemp={current.temp.min}\r\n\t\t\t\t\t\tmaxTemp={current.temp.max}\r\n\t\t\t\t\t\thumidity={current.humidity}\r\n\t\t\t\t\t\twindSpeed={current.wind_speed}\r\n\t\t\t\t\t\tsunrise={current.sunrise}\r\n\t\t\t\t\t\tsunset={current.sunset}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</CardGroup>\r\n\t\t\t</Col>\r\n\t\t));\r\n\t};\r\n\r\n\tchangeLocation = (current) => {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tlocation: current,\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tthis.getWeather();\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tgetWeather = () => {\r\n\t\tthis.setState({\r\n\t\t\tloadState: \"Loading weather...\",\r\n\t\t\tfetching: true,\r\n\t\t});\r\n\r\n\t\tthis.apiClient\r\n\t\t\t.fetchWeatherApi(this.state.location)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tthis.updateWeather(response.data);\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tloadState: \"\",\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t};\r\n\r\n\tupdateWeather = (response) => {\r\n\t\tthis.setState({\r\n\t\t\tcurrentWeather: response.current,\r\n\t\t\tdailyWeather: response.daily,\r\n\t\t});\r\n\t};\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tthis.getWeather();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Router>\r\n\t\t\t\t<Navbar bg=\"dark\" variant=\"dark\">\r\n\t\t\t\t\t<Navbar.Brand>Weather Watch</Navbar.Brand>\r\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tto=\"/Luton\"\r\n\t\t\t\t\t\t\t\tclassName=\"nav-link text-danger\"\r\n\t\t\t\t\t\t\t\tonClick={() => this.changeLocation(\"Luton\")}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLuton\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tto=\"/London\"\r\n\t\t\t\t\t\t\t\tclassName=\"nav-link text-danger\"\r\n\t\t\t\t\t\t\t\tonClick={() => this.changeLocation(\"London\")}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLondon\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tto=\"/Sheffield\"\r\n\t\t\t\t\t\t\t\tclassName=\"nav-link text-danger\"\r\n\t\t\t\t\t\t\t\tonClick={() => this.changeLocation(\"Sheffield\")}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSheffield\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t</Navbar>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path=\"/Luton\">\r\n\t\t\t\t\t\t\t<div className=\"header\">\r\n\t\t\t\t\t\t\t\t<h1\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: \"20px\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{this.state.location}{\" \"}\r\n\t\t\t\t\t\t\t\t\t<span className=\"header-info\">\r\n\t\t\t\t\t\t\t\t\t\t(currently{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{this.state.currentWeather.temp}\r\n\t\t\t\t\t\t\t\t\t\t°C)\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<ReactCardCarousel disable_box_shadow={true}>\r\n\t\t\t\t\t\t\t\t\t{this.createCards()}\r\n\t\t\t\t\t\t\t\t</ReactCardCarousel>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path=\"/London\">\r\n\t\t\t\t\t\t\t<div id=\"header\">\r\n\t\t\t\t\t\t\t\t<h1\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: \"20px\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{this.state.location}{\" \"}\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tfontWeight: \"normal\",\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: \"2rem\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t(currently{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{this.state.currentWeather.temp}\r\n\t\t\t\t\t\t\t\t\t\t°C)\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<ReactCardCarousel disable_box_shadow={true}>\r\n\t\t\t\t\t\t\t\t\t{this.createCards()}\r\n\t\t\t\t\t\t\t\t</ReactCardCarousel>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path=\"/Sheffield\">\r\n\t\t\t\t\t\t\t<div id=\"header\">\r\n\t\t\t\t\t\t\t\t<h1\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: \"20px\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{this.state.location}{\" \"}\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tfontWeight: \"normal\",\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: \"2rem\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t(currently{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{this.state.currentWeather.temp}\r\n\t\t\t\t\t\t\t\t\t\t°C)\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<ReactCardCarousel disable_box_shadow={true}>\r\n\t\t\t\t\t\t\t\t\t{this.createCards()}\r\n\t\t\t\t\t\t\t\t</ReactCardCarousel>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t\t<div id=\"header\">\r\n\t\t\t\t\t\t\t\t<h1\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: \"20px\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{this.state.location}{\" \"}\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tfontWeight: \"normal\",\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: \"2rem\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t(currently{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{this.state.currentWeather.temp}\r\n\t\t\t\t\t\t\t\t\t\t°C)\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<ReactCardCarousel disable_box_shadow={true}>\r\n\t\t\t\t\t\t\t\t\t{this.createCards()}\r\n\t\t\t\t\t\t\t\t</ReactCardCarousel>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path=\"/\">That location is not supported.</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Container>\r\n\t\t\t</Router>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default WeatherWatch;\r\n","import WeatherWatch from \"./WeatherWatch/WeatherWatch.js\";\nimport \"./App.css\";\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<WeatherWatch />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}